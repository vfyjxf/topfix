buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net"
        }
        maven {
            name = "sponge"
            url = "https://repo.spongepowered.org/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: 'org.spongepowered.mixin'

group = 'topfix'
version = '1.0'
archivesBaseName = 'topfix'

minecraft {
    version = project.forgeVersion
    runDir = "run"
    mappings = project.mcpVersion
}


configurations {
    shade
    compile.extendsFrom shade
}

repositories {

    maven {
        name = "ChickenBones maven"
        setUrl("http://chickenbones.net/maven/")
    }
    maven {
        name = "sponge"
        url = "https://repo.spongepowered.org/maven"
    }
    maven {
        name = "The One Probe"
        url = "https://maven.tterrag.com"
    }
    maven {
        name = "CurseMaven"
        url = "https://www.cursemaven.com"
    }
}

dependencies {
    compile fileTree(dir: 'libs', includes: ['*.jar'])

    deobfCompile "mcjty.theoneprobe:TheOneProbe-1.12:1.12-1.4.28-17"
    compile "curse.maven:top-addons-247111:2887479"

    shade ('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: "asm-commons"
        exclude module: "asm-tree"
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "log4j-core"
        exclude module: "gson"
        exclude module: "commons-io"
    }
}


processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}
mixin {
    add sourceSets.main, "mixins.topfix.refmap.json"
}

jar {

    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
        from(project.zipTree(dep)){
            include 'META-INF/services', 'META-INF/services/**'
        }
    }
    manifest {
        attributes([
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                "FMLCorePlugin": "vfyjxf.topfix.TopFixLoadingPlugin",
                "FMLCorePluginContainsFMLMod": true,
        ])
    }
}
